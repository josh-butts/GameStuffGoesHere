<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Gear</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
grav = .5;
hsp = 0;
hsp_carry = 0;
vsp = 0;
jumpspeed = 4;
movespeed = 4.5;
allowMovement = true;
dead = false;
attack_on_cooldown = false;
attack_direction = 1;
attack_cooldown = 20;
alarm[0] = 60;
score = 0;
view_object[0] = obj_Player;
// ice variables
accel = 0.05;
decel = 0.05;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>attack_on_cooldown = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Get the player's input
key_right = keyboard_check(ord('D'));
key_left = -keyboard_check(ord('A'));
key_jump = keyboard_check_pressed(vk_space);
key_up = -keyboard_check(ord('W'));
key_down = keyboard_check(ord('S'));
key_attack = keyboard_check_pressed(ord('L'));
move = key_left + key_right;
vert_move = key_up + key_down;

//react to inputs
if (allowMovement &amp;&amp; !dead)
{
    if (place_meeting(x,y,obj_GearWall) || (place_meeting(x,y,obj_GearWallLeft))
     || (place_meeting(x,y,obj_GearWallUp)))
    {
        scr_GearWallMovement();
    }
    else if (place_meeting(x,y+1,obj_Ice))
    {
        scr_IceMovement();
    }
    else
    {
        scr_NormalMovement();
    }
}

// death
else if (dead)
{
    hsp = 0;
    vsp = 0;
    move = 0;
    //death sound
    if (!audio_is_playing(snd_Death))
    {
        audio_play_sound_on(obj_SFX.sfx, snd_Death, 0, 0);
    }
    //respawn is now handled in obj_Spawn
}

// restrict movement
else if (!allowMovement) 
{
    hsp = 0;
    vsp = 0;
    move = 0;
}

//attack direction
if (move != 0)
{
    attack_direction = move;
}

//attack
if (key_attack &amp;&amp; !attack_on_cooldown &amp;&amp; !dead)
{
    instance_create(x,y,obj_PlayerAttack);
    attack_on_cooldown = true;
    alarm[0] = attack_cooldown;
}

//floor moving variable
var hsp_final = hsp + hsp_carry;
hsp_carry = 0;

//Horizontal Collision
if (place_meeting(x+hsp,y,obj_Wall))
{
    while(!place_meeting(x+sign(hsp),y,obj_Wall))
    {
        x += sign(hsp_final);
    }
    hsp_final = 0;
    hsp = 0;
}

//horizontal movement
x += hsp_final;

//Vertical Collision
if (place_meeting(x,y+vsp,obj_Wall))
{
    while(!place_meeting(x,y+sign(vsp),obj_Wall))
    {
        y += sign(vsp);
    }
    vsp = 0;
}

//vertical movement
y += vsp;

//animation
if (!dead)
{
    scr_GearAnimation();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
